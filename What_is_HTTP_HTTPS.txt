2. Что такое HTTP и HTTPS?
HTTP (HyperText Transfer Protocol) - протокол передачи гипертекста.
Протокол HTTP предполагает использование клиент-серверной архитектуры:
*клиент - тот кто отправляет запрос, для пользователя это чаще всего браузер;
*сервер - это некий компьютер на котором установлена программа HTTP и который ум
еет отрабатывать HTTP запросы.
Для пересылки своих сообщений HTTP использует возможности другого протокола - TC
P (Transmission Control Protocol). Это транспортный протокол управления передачей. Роль: обеспечение надежной доставки пакетов без ошибок.
HTTPS - буква "S" означает "secure". HTTPS является зашифрованной версией HTTP протокола и использует SSL и TLS для шифрования соеденения между клиентом и сервером. Сейчас актуальны TLS 1.2 (2008 год) и 1.3 (2018 год).
Протокол шифрования обеспечивает безопасность передачи данных, гарантии имеют 3 направления:
1. сохранение приватности (хэш-функции, шифрование).
2. Аутентификация (атака man in the middle).
3. Контроль целосности данных.
Хэш-функция - алгоритм, который может преобразовать сообщения любой длинны в строку фиксированной длинны состоящую из цифр и букв. Результат данной функции называют хэш-суммой.
Хакерская атака при аутентификации man in the middle (человек посередине). Например, при покупке онлайн, пользователь отправляет зашифрованный запрос на сервер, злоумышленник его перехватывает, подменяет ключ шифрования своим ключем и пересылает запрос дальше на сервер. Банк отправляет ответ, который опять перехватывается злоумышленником. Банк думает, что общается с вами, а вы думаете что отправляете защищенный запрос банку. Чтобы защитится от этой атаки, существуютт сертификаты, которые подтверждают, что вляделец ключа именно тот, за которого себя выдает. Выдачей сертификатов занимаются центры сертификации. Браузер проверяет подлинность сертификата при установке безопасного соеденения.
TLS использует гибридное шифрование: сначала ассиметричное, через которое передается общий ключ, а затем общение происходит через симметричное шифрование, и использует один и тот же ключ для зашифровки так и для расшифровки.
Ассиметричное - использует первый ключ для зашифровки, а второй ключ для расшифровки. 
На этапе handshake (это установление контакта между сервером и клиентом) используется ассиметричное шифрование.

